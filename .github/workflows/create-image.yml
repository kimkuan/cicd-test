name: create-image

on:
  push:
    tags:
      - 'image-test-**'

jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: Linux-OS
    strategy:
      matrix:
        image-name: [ cicd-test ]
        app-name: [ cicd-test ]
        java-version: [17]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java-version }}

      - name: Check Home directory
        run: echo $HOME
        shell: bash

      - name: Setup Gradle local-cache
        uses: maxnowack/local-cache@v2
        with:
           path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Setup Docker local-cache
        uses: maxnowack/local-cache@v2
        with:
          path: |
            ~/actions-runner/build-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Get tags
        run: echo ::set-output name=TAG::$(echo ${GITHUB_REF/refs\/tags\//})
        shell: bash
        id: get_tag

      - name: gradle build # 애플리케이션 빌드를 수행합니다.
        run: ./gradlew clean bootBuildImage --imageName ${{ matrix.image-name }} --build-cache --info
        shell: bash

      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: docker tag
        run: docker tag ${{ matrix.image-name }} ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.image-name }}:${{ steps.get_tag.outputs.TAG }}

      - name: docker push
        run: docker push ${{ vars.DOCKERHUB_USERNAME }}/${{ matrix.image-name }}:${{ steps.get_tag.outputs.TAG }}
